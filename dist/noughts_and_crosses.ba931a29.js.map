{"mappings":"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","sources":["game.ts"],"sourcesContent":["const board = document.querySelector('.game-container') as HTMLElement;\nconst resetButton = document.querySelector('.reset-button') as HTMLElement;\nconst win = document.querySelector('.winner') as HTMLElement;\nlet winlineCreated = false;\n\n\ntype Turn = \"X\" | \"O\" | \"\"\n\nlet turn: Turn = \"X\";\n\nfunction boardListener() :void {\n    board.addEventListener('click', startGame);\n}\nfunction resetGame() :void {\n    resetButton.addEventListener('click', reset);\n}\n\nfunction main(): void {\n    createSquares();\n    boardListener();\n    resetGame();\n}\n\nfunction createSquare(i: number): void {\n    const square: HTMLDivElement = document.createElement('div');\n    square.className = 'square';\n    square.id = `square-${i}`;\n    square.textContent = '';\n    board.append(square);\n}\n\nfunction createSquares(): void {\n    for (let i = 0; i < 9; i++) {\n        createSquare(i)\n    }\n}\n\nfunction createWinline(i: number): void {\n    const winline: HTMLDivElement = document.createElement('div');\n    winline.className = 'winline';\n    winline.id = `winline-${i}`;\n    board.append(winline);\n}\n\n\nfunction winner(): boolean {\n    const squares: Array<string> = getSquares();\n    if (squares[0] === squares[1] && squares[1] === squares[2] && squares[0] !== \"\") {\n        if (!winlineCreated) {\n            createWinline(0);\n            winlineCreated = true;\n        }\n        \n        return true;\n    }\n    else if (squares[3] === squares[4] && squares[4] === squares[5] && squares[4] !== \"\") {\n        if (!winlineCreated) {\n            createWinline(1);\n            winlineCreated = true;\n        }\n        return true;\n    }\n    else if (squares[6] === squares[7] && squares[7] === squares[8] && squares[6] !== \"\") {\n        if (!winlineCreated) {\n            createWinline(2);\n            winlineCreated = true;\n        }\n        return true;\n    }\n    else if (squares[0] === squares[3] && squares[3] === squares[6] && squares[0] !== \"\") {\n        if (!winlineCreated) {\n            createWinline(3);\n            winlineCreated = true;\n        }\n        return true;\n    }\n    else if (squares[1] === squares[4] && squares[4] === squares[7] && squares[1] !== \"\") {\n        if (!winlineCreated) {\n            createWinline(4);\n            winlineCreated = true;\n        }\n        return true;\n    }\n    else if (squares[2] === squares[5] && squares[5] === squares[8] && squares[2] !== \"\") {\n        if (!winlineCreated) {\n            createWinline(5);\n            winlineCreated = true;\n        }\n        return true;\n    }\n    else if (squares[0] === squares[4] && squares[4] === squares[8] && squares[0] !== \"\") {\n        if (!winlineCreated) {\n            createWinline(6);\n            winlineCreated = true;\n        }\n        return true;\n    }\n    else if (squares[2] === squares[4] && squares[4] === squares[6] && squares[2] !== \"\") {\n        if (!winlineCreated) {\n            createWinline(7);\n            winlineCreated = true;\n        }\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nfunction removeWinlines(): void {\n    for (let i = 0; i < 8; i++) {\n        const winline = document.getElementById(`winline-${i}`);\n        if (winline) {\n            winline.remove();\n        }\n    }\n}\n\n\nfunction resetSquares(): void {\n    for (let i = 0; i < 9; i++) {\n        const square = document.querySelector(`#square-${i}`) as HTMLElement;\n        square.textContent = \"\";\n    }\n    boardListener();\n    win.style.display = 'none';\n}\n\nfunction getSquares(): Array<string> {\n    const squares: Array<string> = [];\n    for (let i = 0; i < 9; i++) {\n        const square = document.querySelector(`#square-${i}`) as HTMLElement;\n        const squareString: string | null = square.textContent;\n        if (squareString=== null) squares.push(\"\");\n        else {\n            squares.push(squareString);\n        }\n    }\n    return squares;\n}\n\nfunction startGame(e: Event): void {\n    const target = e.target as HTMLElement; \n    const squareId: string | null = target.id;\n    if (!squareId) return; \n    const square: HTMLElement | null = document.querySelector(`#${CSS.escape(squareId)}`);\n    if (!square || square.textContent !== \"\") return;\n    square.textContent = turn;\n    const hasWon: boolean = winner();\n    const isDraw: boolean = draw();\n    if (hasWon) {\n        finish();\n    } else if (isDraw) {\n        finish();\n    } else {\n        turn = (turn === \"X\") ? \"O\" : \"X\";\n    }\n}\n\nfunction finish(): void {\n    board.removeEventListener('click', startGame);\n    if (win === null) return;\n    const hasWon: boolean = winner();\n    if (hasWon) {\n        win.textContent = turn + \" Wins!!!\";\n        win.style.display = 'block';\n    }\n    else {\n        win.textContent = \"Draw\";\n        win.style.display = 'block';\n    }\n}\n\nfunction reset(): void {\n    turn = \"X\";\n    resetSquares();\n    removeWinlines();\n    winlineCreated = false;\n}\n\nfunction draw(): boolean {\n    const hasWon: boolean = winner();\n    const noMoreMoves = boardFull();\n    if (!hasWon && noMoreMoves) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n\nfunction boardFull(): boolean {\n    const squares: Array<string> = getSquares();\n    for (let i = 0; i < squares.length; i ++) {\n        if (squares[i] === \"\") {\n            return false;\n        }\n    }\n    return true;\n}\n\nmain()"],"names":[],"version":3,"file":"noughts_and_crosses.ba931a29.js.map","sourceRoot":"/__parcel_source_root/"}